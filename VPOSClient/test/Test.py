import hashlib
import logging

from VPOSClient.impl.VPOSClient import VPosClient
from VPOSClient.impl.VPosConfig import VPosConfig
from VPOSClient.utils.RequestBuilderForTest import *
from VPOSClient.utils.Utils import gen_order_id

shop_id = '129289999900002'
redirect_key = "au-PA-B2AAHsQSG-UuaVNcHFpBk3GJBNWqR3--Tyf-Fa-wav--ySqz9f24-yvP-RvbMQx-VYz9jVDNe-uMwTSt3-tvPukbJTTt-U"
apiResultKey = 'hSAc7sg-z-vZ-296FuwwUaqHmzQ-eQ-E--2pXV-mEGh6YQtBdDK-NH9KeCyQrtBtmwFv-m6kEUtn27-6ATfkB-x2Dy3F4G-9t4sp'
order_id = gen_order_id()
operatorId = 'OPERATOR'
pan = '4118830900940017'
expDate = '2112'
amount = '100'
currency = '978'
accountingMode = 'I'
network = '02'
notifUrl = "https://atpostest.ssb.it/atpos/apibo/en/3ds-notification.html"
urlBack = "http://localhost:8080/payment-gateway/vpos/tokenize"
urlDone = "http://localhost:8080/payment-gateway/vpos/tokenize"
urlMs = "https://te.t-frutta.eu/TImooneyWS/app_api/v10/payment"
urlRedirect = "https://atpostest.ssb.it/atpos/pagamenti/main"
urlApi = "https://atpostest.ssb.it/atpos/apibo/apiBOXML.app"
amount = '10'
originalReqRefNum = '20200210770969248727528005362259'
pares = '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'
base64_Html = "PGh0bWw+Cgo8Ym9keT4KICAgIDxzdHlsZT4KICAgICAgICBib2R5IHsKICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL2kuZ2lwaHkuY29tL21lZGlhLzNvRWpJNlNJSUhCZFJ4WEk0MC9naXBoeS53ZWJwJyk7CiAgICAgICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7CiAgICAgICAgICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7CiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjsKICAgICAgICB9CiAgICA8L3N0eWxlPgo8L2JvZHk+Cgo8L2h0bWw+"

config = VPosConfig(shop_id, redirect_key, urlRedirect, apiResultKey, urlApi)
config.timeout = 100
config.config_proxy("proxy-dr.reply.it", 8080, 'http')
client = VPosClient(config)
# impl.set_proxy("proxy-dr.reply.it:8080")
logging.basicConfig(level=logging.INFO)

#print(client.build_HTML_redirect_fragment(build_get_html_payment_Request(urlBack, urlDone, urlMs, amount, '826', None, order_id, accountingMode, "I")))
# print(client.verify_MAC("http://localhost:8080/payment-gateway/vpos/tokenize?ORDERID=1585919322092143568728681910679428531949566&SHOPID=129289999900002&AUTHNUMBER=413889&AMOUNT=10&CURRENCY=978&TRANSACTIONID=8032112928SL211ntcm0icwf4&ACCOUNTINGMODE=D&AUTHORMODE=I&RESULT=00&TRANSACTIONTYPE=TT07&TRECURR=U&CRECURR=899107067200401&NETWORK=02&MAC=105e962d0727ef0d30a1ce21d14e6813449daa6375c433d2cc2fa631bc3bf680"))
#print(client.threeDS_authorize0(build_threeDS_authorize0(order_id, operatorId, pan, expDate, network, amount, currency, accountingMode, notifUrl)).__dict__)
# print(client.threeDS_authorize0(build_threeDS_authorize0(order_id, operatorId, '4118830900940017', expDate, network, amount, currency, accountingMode, notifUrl)).__dict__)
#print(client.threeDS_authorize1((build_threeDS_authorize1(operatorId, '8e27cd0b-2169-4bda-8b90-0c9b4a8f70d1', 'N'))))
print(client.threeDS_authorize2(build_threeDS_authorize2(order_id, operatorId, '8e27cd0b-2169-4bda-8b90-0c9b4a8f70d1')))
# print(client.get_order_status(OrderStatusRequest("1585918683244786622374411366991154750417722", operatorId)))
# client.capture(build_confirm_transaction("8032112928SL213zi0cum4z94", amount, currency, "1585918683244786622374411366991154750417722", operatorId))
# client.refund( build_refund_request("8032112928SL2sc455er81pd4", "1585921420336589785834164732714370724870065", amount, currency,  operatorId))
#client.authorize(build_authorize(order_id))
